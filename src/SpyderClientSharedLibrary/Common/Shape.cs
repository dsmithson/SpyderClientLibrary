using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Spyder.Client.Common
{
    public class Shape : PropertyChangedBase
    {
        private string name;
        public string Name
        {
            get { return name; }
            set
            {
                if (name != value)
                {
                    name = value;
                    OnPropertyChanged();
                }
            }
        }

        private string definition;
        public string Definition
        {
            get { return definition; }
            set
            {
                if (definition != value)
                {
                    definition = value;
                    OnPropertyChanged();
                }
            }
        }

        /// <summary>
        /// Builds a full shape definition in the ".shape" file format
        /// </summary>
        /// <returns></returns>
        public string ToShapeFileString()
        {
            if (string.IsNullOrEmpty(definition))
                return string.Empty;

            StringBuilder builder = new StringBuilder();
            builder.AppendLine("<PathGeometry");
            builder.AppendLine("xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"");
            builder.AppendLine("xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"");
            builder.AppendFormat("Figures=\"{0}\" />", Definition);

            return builder.ToString();
        }

        public async Task<bool> ToShapeFileStream(Stream stream)
        {
            string fileText = ToShapeFileString();
            if(string.IsNullOrEmpty(fileText))
                return false;

            using (StreamWriter writer = new StreamWriter(stream))
            {
                await writer.WriteAsync(fileText);
            }
            return true;
        }

        public string CoerceFileName()
        {
            if (string.IsNullOrEmpty(name))
                return "My Shape.shape";
            else if (!name.ToLower().EndsWith(".shape"))
                return name + ".shape";
            else
                return name;
        }
        
        public static Shape Parse(string name, Stream shapeFileStream)
        {
            if (string.IsNullOrEmpty(name) || shapeFileStream == null || shapeFileStream.Length == 0)
                return null;

            byte[] bytes = new byte[shapeFileStream.Length];
            shapeFileStream.Read(bytes, 0, bytes.Length);
            return Parse(name, Encoding.UTF8.GetString(bytes, 0, bytes.Length));
        }

        public static Shape Parse(string name, string shapeFileText)
        {
            if (string.IsNullOrEmpty(shapeFileText) || string.IsNullOrEmpty(name))
                return null;

            const string searchStartText = "FIGURES='";
            const string searchEndText = "\'";
            string normalizedText = shapeFileText.ToUpper().Replace('\"', '\'');

            int parseStartIndex = normalizedText.IndexOf(searchStartText);
            if (parseStartIndex < 0)
                return null;

            parseStartIndex += searchStartText.Length;
            int parseEndIndex = normalizedText.IndexOf(searchEndText, parseStartIndex);
            if (parseEndIndex <= parseStartIndex)
                return null;

            var response = new Shape()
            {
                Name = name,
                Definition = normalizedText.Substring(parseStartIndex, parseEndIndex - parseStartIndex)
            };
            return response;
        }

        public static Shape GetFactoryShape(ShapeType type)
        {
            Shape response = new Shape() { Name = type.ToString() };

            switch (type)
            {
                case ShapeType.Callout_Rough:
                    response.Definition = "M 46.4969,27.7124L 78.5637,1.56866L 121.854,26.6667L 167.282,6.10352e-005L 202.555,19.3465L 245.311,8.88893L 237.829,47.0588L 256,75.2941L 237.294,104.575L 247.983,137.516L 203.624,126.013L 177.971,147.974L 129.336,133.333L 76.9603,160L 49.7035,134.379L 8.01671,150.588L 22.4468,108.758L 3.94717e-006,88.366L 22.9812,53.8562L 4.27558,18.3007L 46.4969,27.7124 Z";
                    break;
                case ShapeType.Callout_Round:
                    response.Definition = "M 95.8328,49.4998L 93.3328,17.4998L 107.333,44.4999L 115.833,19.4999L 123.833,42.4999L 136.333,14.4999L 139.833,44.4999L 155.333,21.4999L 154.333,43.4999L 165.333,28.9999L 162.833,45.4999L 181.333,25.9999L 169.833,55.4999L 208.333,31.9999L 189.333,61.4999L 210.833,53.4999L 194.833,67.9999L 230.833,62.9999L 196.833,83.9999L 243.333,85.4998L 203.833,97.4998L 237.833,102L 198.333,108L 220.333,125.5L 186.833,121.5L 204.833,141.5L 183.833,137.5L 187.833,146L 177.333,140L 182.333,157.5L 160.333,139L 160.333,163.5L 145.833,141L 137.833,170L 127.833,147.5L 118.333,163L 110.833,150L 94.8328,170L 92.3328,140L 72.3328,162.5L 76.8328,137L 54.8328,149L 62.8328,122.5L 40.3328,126.5L 51.8328,112L 29.3328,110L 43.8328,101L 8.33284,97.4998L 50.3328,83.9999L 10.3328,67.9999L 48.8328,70.4999L 32.3328,52.9999L 57.8328,60.4999L 38.8328,32.4999L 76.8328,54.4999L 65.8328,22.9999L 95.8328,49.4998 Z";
                    break;
                case ShapeType.Callout_Fine:
                    response.Definition = "M -1.58283e-014,23.7847L 7.60746,15.603L 0.574292,8.03899L 7.86028,8.03899C 7.99588,7.77899 8.24241,7.58607 8.53708,7.52296L 8.53708,0.715591L 16.559,7.35545L 25.0842,0.29895L 33.6666,7.40276L 42.249,0.29895L 50.7508,7.33606L 59.2527,0.298904L 67.7508,7.33295L 76.2489,0.298889L 84.7508,7.33601L 93.2526,0.298874L 101.751,7.33293L 110.249,0.298874L 118.751,7.336L 127.253,0.298828L 135.367,7.01515L 142.912,4.57764e-005L 142.912,7.51373L 142.836,7.51373C 143.122,7.56013 143.368,7.72804 143.518,7.96283L 150.235,7.96283L 143.825,15.707L 151.511,23.9736L 143.675,32.4015L 143.675,32.6421L 151.511,41.0699L 143.675,49.4977L 143.675,49.6459L 151.511,58.0737L 143.675,66.5015L 143.675,66.8106L 151.511,75.2384L 144.04,83.2738L 150.917,90.6704L 143.624,90.6704C 143.521,90.9809 143.27,91.2238 142.954,91.3154L 142.954,97.9938L 134.934,91.355L 134.303,91.355L 125.762,98.4245L 117.26,91.3874L 108.759,98.4245L 100.26,91.3905L 91.7623,98.4245L 83.2605,91.3874L 74.7586,98.4245L 66.5938,91.6664L 58.4291,98.4245L 49.9272,91.3873L 41.4253,98.4245L 32.9272,91.3904L 24.4291,98.4245L 16.204,91.6164L 8.58795,98.6979L 8.58795,91.3424C 8.24021,91.2866 7.95237,91.0516 7.82223,90.735L 1.26455,90.735L 7.58149,83.1033L 1.01725e-005,74.9495L 7.74749,66.6172L 7.74749,66.2855L 1.01725e-005,57.9532L 7.74749,49.621L 7.74749,49.2818L 2.03451e-005,40.9495L 7.74749,32.6173L 7.74749,32.1171L -1.58283e-014,23.7847 Z";
                    break;
                case ShapeType.Half_Circles:
                    response.Definition = "M -1.58283e-014,21.8802C -1.60076e-014,19.153 2.38373,16.4258 4.91039,13.6987C 2.57567,11.1825 0.381337,8.7419 0.381337,7.48125C 0.381337,6.17528 2.73636,6.13568 5.16278,6.13448C 5.29839,5.87451 5.5449,5.68159 5.83956,5.61852C 5.83956,3.34938 5.84254,1.08514 7.21328,1.08514C 8.55025,1.08514 11.1884,3.23924 13.8614,5.45091C 16.7032,3.09972 19.545,0.7957 22.3867,0.7957C 25.2475,0.7957 28.1083,3.13069 30.9691,5.49817C 33.8299,3.13069 36.6907,0.7957 39.5515,0.7957C 42.3854,0.7957 45.2193,3.08705 48.0533,5.4315C 50.8872,3.08705 53.7212,0.795654 56.5551,0.795654C 59.3879,0.795654 62.2206,3.08502 65.0533,5.42841C 67.886,3.08502 70.7187,0.795639 73.5514,0.795639C 76.3854,0.795639 79.2193,3.08702 82.0533,5.43147C 84.8872,3.08702 87.7211,0.795609 90.5551,0.795609C 93.3878,0.795609 96.2205,3.08501 99.0532,5.42839C 101.886,3.08501 104.719,0.795609 107.551,0.795609C 110.186,0.795609 112.821,2.77611 115.455,4.93848C 117.898,2.67635 120.241,0.600052 121.467,0.600052C 122.812,0.600052 122.814,3.09607 122.814,5.59633L 122.925,5.59633C 123.279,5.59633 123.591,5.78069 123.768,6.0587C 125.882,6.06438 127.863,6.14967 127.863,7.43201C 127.863,8.6826 125.979,11.0717 123.925,13.5628L 123.925,14.0162C 126.407,16.7005 128.716,19.3848 128.716,22.0691C 128.716,24.7534 126.407,27.4376 123.925,30.1219L 123.925,31.1125C 126.407,33.7968 128.716,36.4811 128.716,39.1654C 128.716,41.8497 126.407,44.5339 123.925,47.2182L 123.925,48.1163C 126.407,50.8006 128.716,53.4848 128.716,56.1691C 128.716,58.8534 126.407,61.5377 123.925,64.2219L 123.925,65.2811C 126.407,67.9653 128.716,70.6496 128.716,73.3339C 128.716,76.0123 126.417,78.6907 123.941,81.3691C 126.217,83.8255 128.315,86.1864 128.315,87.419C 128.315,88.6637 126.176,88.7581 123.874,88.7652C 123.743,89.1633 123.367,89.4505 122.925,89.4505L 122.857,89.4505C 122.856,91.6618 122.82,93.8152 121.483,93.8152C 120.146,93.8152 117.509,91.6618 114.836,89.4505L 114.602,89.4505C 111.755,91.8062 108.908,94.1187 106.061,94.1187C 103.228,94.1187 100.396,91.8293 97.5629,89.4859C 94.7302,91.8293 91.8975,94.1186 89.0648,94.1186C 86.2309,94.1186 83.397,91.8273 80.563,89.4828C 77.729,91.8273 74.8951,94.1187 72.0611,94.1187C 69.3395,94.1187 66.6179,92.0053 63.8963,89.7612C 61.1747,92.0053 58.4531,94.1186 55.7315,94.1186C 52.8976,94.1186 50.0636,91.8272 47.2297,89.4828C 44.3957,91.8272 41.5618,94.1186 38.7278,94.1186C 35.8951,94.1186 33.0624,91.8292 30.2297,89.4859C 27.397,91.8292 24.5643,94.1186 21.7316,94.1186C 18.9899,94.1186 16.2482,91.974 13.5065,89.7115C 10.9721,92.0642 8.50654,94.2888 7.23722,94.2888C 5.91879,94.2888 5.89102,91.8886 5.89043,89.4379C 5.54265,89.3821 5.25478,89.147 5.12465,88.8304C 2.94212,88.8284 0.841105,88.7772 0.841105,87.4568C 0.841105,86.1849 2.79057,83.7354 4.88453,81.1986C 2.36749,78.4807 1.01725e-005,75.7628 1.01725e-005,73.045C 1.01725e-005,70.2676 2.47224,67.4902 5.04996,64.7129L 5.04996,64.3808C 2.47224,61.6034 1.01725e-005,58.826 1.01725e-005,56.0487C 1.01725e-005,53.2714 2.47224,50.494 5.04997,47.7167L 5.04997,47.3771C 2.47225,44.5997 2.03451e-005,41.8223 2.03451e-005,39.045C 2.03451e-005,36.2676 2.47225,33.4903 5.04997,30.713L 5.04997,30.2123C 2.47224,27.4349 -1.56458e-014,24.6576 -1.58283e-014,21.8802 Z";
                    break;
                case ShapeType.Simple_Spikes:
                    response.Definition = "M 7.94729e-008,0L 11.7583,59.763L 9.4739e-015,119.763L 109.758,109.763L 119.758,119.763L 129.758,109.763L 239.758,119.763L 229.758,59.763L 239.758,0L 129.758,9.76302L 119.508,0L 109.758,9.76305L 7.94729e-008,0 Z";
                    break;
                case ShapeType.Talking_Balloon_Left:
                    response.Definition = "M 12.808,0L 246.141,0C 248.903,0 251.141,2.23859 251.141,5L 251.141,126.333C 251.141,129.095 248.903,131.333 246.141,131.333L 41.0122,131.333C 37.5482,139.951 25.0336,146.333 10.1261,146.333C 6.58605,146.333 3.18098,145.973 -2.89603e-007,145.309C 12.1253,144.883 21.8521,138.868 22.6482,131.333L 12.808,131.333C 10.0465,131.333 7.80796,129.095 7.80796,126.333L 7.80796,5C 7.80796,2.23859 10.0465,0 12.808,0 Z";
                    break;
                case ShapeType.Talking_Balloon_Right:
                    response.Definition = "M 235.669,6.10352e-005L 4.94417,6.10352e-005C 2.21361,6.10352e-005 7.60665e-005,2.23865 7.60665e-005,5.00006L 7.60665e-005,126.333C 7.60665e-005,129.095 2.21361,131.333 4.94417,131.333L 207.78,131.333C 211.205,139.951 223.58,146.333 238.32,146.333C 241.821,146.333 245.188,145.973 248.333,145.309C 236.344,144.883 226.726,138.868 225.938,131.333L 235.669,131.333C 238.399,131.333 240.613,129.095 240.613,126.333L 240.613,5.00006C 240.613,2.23865 238.399,6.10352e-005 235.669,6.10352e-005 Z";
                    break;
                case ShapeType.Thought_Balloon_Left:
                    response.Definition = "M 28.0833,87.2501C 34.0664,87.2501 38.9167,90.4587 38.9167,94.4168C 38.9167,98.3748 34.0664,101.583 28.0833,101.583C 22.1002,101.583 17.25,98.3748 17.25,94.4168C 17.25,90.4587 22.1003,87.2501 28.0833,87.2501 Z M 11.0481,96.2503C 14.8947,96.2503 18.0129,98.2621 18.0129,100.744C 18.0129,103.225 14.8947,105.237 11.0481,105.237C 7.20157,105.237 4.08332,103.225 4.08332,100.744C 4.08332,98.2621 7.20158,96.2503 11.0481,96.2503 Z M 136.417,94.4169C 128.746,94.4169 121.999,91.7142 118.105,87.6266C 114.946,92.8196 105.609,96.5836 94.5832,96.5836C 83.8439,96.5836 74.7074,93.0129 71.3208,88.0289C 66.4795,89.8381 60.379,90.9168 53.75,90.9168C 39.3405,90.9168 27.4286,85.8201 25.5177,79.2027L 24.9167,79.2085C 13.917,79.2085 5,73.4069 5,66.2502C 5,62.4678 7.49064,59.064 11.4631,56.6951C 4.68999,54.6263 0,50.1488 0,44.9585C 0,39.1048 5.96574,34.1575 14.1572,32.5502C 9.27775,29.1393 6.25001,24.3846 6.25001,19.1252C 6.25001,8.74684 18.0399,0.333511 32.5833,0.333511C 43.2828,0.333511 52.4919,4.88713 56.6126,11.4267C 60.0845,6.26024 67.7913,2.66687 76.7411,2.66687C 84.1183,2.66687 90.6509,5.10835 94.6633,8.85991C 97.5784,3.81892 103.835,0.333542 111.083,0.333542C 116.822,0.333542 121.939,2.51843 125.268,5.9304C 128.904,2.32806 134.672,0.000198364 141.167,0.000198364C 147.388,0.000198364 152.943,2.13654 156.595,5.48311C 158.255,4.79893 160.216,4.40367 162.316,4.40367C 168.299,4.40367 173.149,7.6123 173.149,11.5703C 173.149,13.3356 172.184,14.9519 170.584,16.2009C 174.986,18.9299 177.75,22.8696 177.75,27.2503C 177.75,29.9983 176.662,32.5727 174.765,34.7836C 178.671,38.1563 181.083,42.7958 181.083,47.917C 181.083,53.1091 178.604,57.8062 174.602,61.1898C 176.068,62.9951 176.899,65.0529 176.899,67.2369C 176.899,74.1214 168.647,79.7519 158.228,80.1703C 157.715,88.0975 148.146,94.4169 136.417,94.4169 Z";
                    break;
                case ShapeType.Thought_Balloon_Right:
                    response.Definition = "M 153,87.2501C 147.017,87.2501 142.166,90.4588 142.166,94.4168C 142.166,98.3748 147.017,101.583 153,101.583C 158.983,101.583 163.833,98.3748 163.833,94.4168C 163.833,90.4588 158.983,87.2501 153,87.2501 Z M 170.035,96.2503C 166.188,96.2503 163.07,98.2621 163.07,100.744C 163.07,103.225 166.188,105.237 170.035,105.237C 173.881,105.237 177,103.225 177,100.744C 177,98.2621 173.881,96.2503 170.035,96.2503 Z M 44.6665,94.4169C 52.3374,94.4169 59.0842,91.7142 62.9785,87.6266C 66.1372,92.8196 75.4737,96.5836 86.4999,96.5836C 97.2392,96.5836 106.376,93.0129 109.762,88.0289C 114.604,89.8381 120.704,90.9168 127.333,90.9168C 141.743,90.9168 153.654,85.8201 155.565,79.2028L 156.166,79.2085C 167.166,79.2085 176.083,73.4069 176.083,66.2502C 176.083,62.4679 173.592,59.064 169.62,56.6951C 176.393,54.6263 181.083,50.1488 181.083,44.9585C 181.083,39.1048 175.117,34.1576 166.926,32.5502C 171.805,29.1393 174.833,24.3846 174.833,19.1252C 174.833,8.74687 163.043,0.333542 148.5,0.333542C 137.8,0.333542 128.591,4.88715 124.471,11.4268C 120.999,6.26025 113.292,2.66689 104.342,2.66689C 96.9648,2.66689 90.4322,5.10838 86.4197,8.85992C 83.5047,3.81895 77.248,0.333557 69.9998,0.333557C 64.2611,0.333557 59.1438,2.51845 55.8146,5.93042C 52.1788,2.32808 46.4106,0.000228882 39.9165,0.000228882C 33.6953,0.000228882 28.1403,2.13655 24.4879,5.48314C 22.8278,4.79895 20.8675,4.40369 18.7675,4.40369C 12.7845,4.40369 7.93419,7.61232 7.93419,11.5703C 7.93419,13.3357 8.89906,14.952 10.4989,16.2009C 6.09734,18.9299 3.33328,22.8696 3.33328,27.2503C 3.33328,29.9983 4.42089,32.5727 6.31806,34.7836C 2.41214,38.1563 -9.55166e-006,42.7958 -9.55166e-006,47.917C -9.55166e-006,53.1091 2.47944,57.8062 6.48127,61.1898C 5.01462,62.9951 4.18417,65.0529 4.18417,67.237C 4.18417,74.1214 12.4356,79.7519 22.8548,80.1703C 23.3677,88.0975 32.937,94.4169 44.6665,94.4169 Z";
                    break;
                case ShapeType.Rectangle_Rounded:
                    response.Definition = "M99,72.48A9.00007,9.00007,-180,0,0,108,63.48L108,9.48A9.00007,9.00007,-180,0,0,99,0.48L9,0.48A9.00007,9.00007,-180,0,0,0,9.48L0,63.48A9.00007,9.00007,-180,0,0,9,72.48L99,72.48z";
                    break;
                case ShapeType.Star_Five_Sided:
                    response.Definition = "M72.31,45.17L58.5,0.48 43.98,45.17 -3.01,45.17 35.01,72.79 20.48,117.48 58.5,89.86 96.52,117.48 81.99,72.79 120.01,45.17 72.31,45.17z";
                    break;
                case ShapeType.Star_Six_Sided:
                    response.Definition = "M29.41,81.48L45,108.48 60.59,81.48 91.77,81.48 76.18,54.48 91.77,27.48 60.59,27.48 45,0.48 29.41,27.48 -1.77,27.48 13.82,54.48 -1.77,81.48 29.41,81.48z";
                    break;
                case ShapeType.Star_Seven_Sided:
                    response.Definition = "M39.02,25.38L9.58,21.87 19.47,49.41 -1.39,69.94 26.31,79.38 29.35,108.48 54,92.72 78.65,108.48 81.69,79.38 109.39,69.94 88.53,49.41 98.42,21.87 69.37,25.38 54,0.48 39.02,25.38z";
                    break;
                case ShapeType.Triangle:
                    response.Definition = "M116.35,108.48L54,0.48 -8.35,108.48 116.35,108.48z";
                    break;
                default:
                    break;
            }

            if (string.IsNullOrEmpty(response.Definition))
                return null;

            return response;
        }

        public static IEnumerable<Shape> GetFactoryShapes()
        {
            foreach (ShapeType type in Enum.GetValues(typeof(ShapeType)))
                yield return GetFactoryShape(type);
        }
    }
}
